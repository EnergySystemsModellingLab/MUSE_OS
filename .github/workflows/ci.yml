name: QA and tests

on:
    pull_request:
        types: [opened, synchronize, reopened]
    push:
        branches: [main, develop]

jobs:
  # Checks the style using the pre-commit hooks
  qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pre-commit/action@v3.0.0

  # Only then, normal testing proceeds
  unit-tests:
    needs: qa
    runs-on: ${{ matrix.os }}


    strategy:
      matrix:
        fail-fast: false
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip==22.1.2
        pip install -U setuptools==62.6.0 wheel xlrd==1.2.0
        pip install -e .[all]

    # The unit tests, with coverage under linux
    - name: Unit tests (linux)
      if: (runner.os == 'Linux')
      run: |
        pip install pytest-cov
        pytest -m "not regression" --junitxml=junit/pytest.xml \
            --cov=muse \
            --cov-branch \
            --cov-report=xml:coverage/coverage.xml

    - name: Unit tests (not linux)
      if: (runner.os != 'Linux')
      run: pytest -m "not regression"

  regression-tests:
    needs: qa
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        fail-fast: false
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip==22.1.2
          pip install -U setuptools==62.6.0 wheel xlrd==1.2.0
          pip install -e .[all]

      # The regression tests (with non coverage)
      - name: Regression tests
        run: pytest -m "regression"
