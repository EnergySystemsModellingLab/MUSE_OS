name: QA and tests

on:
    pull_request:
        types: [opened, synchronize, reopened]
    push:
        branches: [master, development]

jobs:
  # Checks the style using the pre-commit hooks
  qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pre-commit/action@v2.0.2

  # Only then, normal testing proceeds
  unit-tests:
    needs: qa
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel xlrd==1.2.0
        pip install -e .[all]

    # The unit tests, with coverage under linux
    - name: Unit tests (linux)
      if: (runner.os == 'Linux')
      run: |
        pip install pytest-cov
        pytest -m "not regression" --junitxml=junit/pytest.xml \
            --cov=muse \
            --cov-branch \
            --cov-report=xml:coverage/coverage.xml

    - name: Unit tests (not linux)
      if: (runner.os != 'Linux')
      run: pytest -m "not regression"

  regression-tests:
    needs: qa
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools wheel xlrd==1.2.0
          pip install -e .[all]

      # The regression tests (with non coverage)
      - name: Regression tests
        run: pytest -m "regression"

  legacy-tests:
    needs: qa
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools wheel xlrd==1.2.0
          pip install -e .[all]

      # Then we install the dependencies to run the legacy tests
      - name: Checkout Legacy MUSE
        uses: actions/checkout@v2
        with:
          repository: SGIModel/StarMuse
          ref: archive/legacy
          path: LegacyMuse

      - name: Checkout MUSE Data
        uses: actions/checkout@v2
        with:
          repository: SGIModel/SGIModelData
          ref: master
          path: SGIModelData
          token: ${{ secrets.MUSE }}

      - name: Install MUSE Data
        run: pip install ./SGIModelData

      - name: Install Legacy MUSE
        run: pip install ./LegacyMuse

      # The legacy tests (with no coverage)
      - name: Legacy tests
        run: pytest -m "legacy"