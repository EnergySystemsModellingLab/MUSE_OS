trigger:
  branches:
    include:
      - development
      - master
pr:
  - development
  - master

strategy:
  matrix:
    windows:
      imageName: windows-2019
      pythonVersion: 3.7
    linux:
      imageName: ubuntu-20.04
      pythonVersion: 3.7
    umac:
      imageName: macos-10.15
      pythonVersion: 3.7

pool:
  vmImage: $(imageName)

resources:
  repositories:
    - repository: SGIModelData
      type: github
      name: SGIModel/SGIModelData
      ref: master
      endpoint: rse-ci-imperial
    - repository: SGILegacy
      type: github
      name: SGIModel/StarMuse
      ref: archive/legacy
      endpoint: rse-ci-imperial

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(pythonVersion)
      architecture: x64

  - script: pip install -U setuptools wheel xlrd==1.2.0
    name: Prerequisites

  - checkout: SGIModelData
  - script: pip install ./SGIModelData
    name: legacy_data


  - checkout: SGILegacy
  - script: pip install ./StarMuse
    name: legacy_muse

  - script: |
      python -c "import SGIModelData; print(SGIModelData.__file__)"
      pip install -e ./StarMuse[dev,excel]
      pip freeze
    name: setup
    

  - script: |
      cd StarMuse
      pip install pytest-cov
      pytest --junitxml=junit/pytest.xml \
          --cov=src/muse \
          --cov-branch \
          --cov-report=xml:coverage/coverage.xml
    condition: eq(variables['Agent.OS'], 'Linux')
    name: test_with_coverage
    

  - script: |
      cd StarMuse
      pytest --junitxml=junit/pytest.xml
    condition: ne(variables['Agent.OS'], 'Linux')
    name: test
    

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: StarMuse/junit/*.xml
      testRunTitle: '$(Agent.OS) - $(Build.BuildNumber)[$(Agent.JobName)]'
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: StarMuse/coverage/coverage.xml
      reportDirectory: coverage
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'], 'Linux'))
