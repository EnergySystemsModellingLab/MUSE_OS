trigger:
  branches:
    include:
      - updatedevelopment
      - master
pr:
  - updatedevelopment
  - master

strategy:
  matrix:
    windows:
      imageName: windows-2019
      pythonVersion: 3.7
    linux:
      imageName: ubuntu-16.04
      pythonVersion: 3.7
    umac:
      imageName: macos-10.15
      pythonVersion: 3.7

pool:
  vmImage: $(imageName)

resources:
  repositories:
    - repository: SGIModelData
      type: github
      name: SGIModel/SGIModelData
      ref: master
      endpoint: rse-ci-imperial
    - repository: StarMUSELegacy
      type: github
      name: SGIModel/StarMuse
      ref: archive/legacy
      endpoint: rse-ci-imperial

steps:
  - checkout: SGIModelData
  - checkout: StarMUSELegacy
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(pythonVersion)
      architecture: x64

  - script: pip install -e SGIModelData
    name: legacy_data

  - script: |
      cd StarMuse
      git checkout archive/legacy
      cd ..
      git clone StarMuse StarMUSELegacy -b archive/legacy
      pip install -e StarMUSELegacy
    name: legacy_muse

  - checkout: self

  - script: pip install -e StarMuse[dev,private_sgi_model]
    name: setup
    

  - script: |
      cd StarMuse
      pip install pytest-cov
      pytest --junitxml=junit/pytest.xml \
          --cov=src/muse \
          --cov-branch \
          --cov-report=xml:coverage/coverage.xml
    condition: eq(variables['Agent.OS'], 'Linux')
    name: test_with_coverage
    

  - script: |
      cd StarMuse
      pytest --junitxml=junit/pytest.xml
    condition: ne(variables['Agent.OS'], 'Linux')
    name: test
    

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: StarMuse/junit/*.xml
      testRunTitle: '$(Agent.OS) - $(Build.BuildNumber)[$(Agent.JobName)]'
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: StarMuse/coverage/coverage.xml
      reportDirectory: coverage
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'], 'Linux'))

  - script: |
      sudo apt update
      sudo apt install texlive-latex-base texlive-fonts-recommended \
            texlive-latex-recommended texlive-latex-extra pandoc latexmk
      pip install -e StarMuse[docs]
      cd StarMuse
      sphinx-build -n -W -b latex docs/ build/latex
      cd build/latex
      latexmk -interaction=nonstopmode -pdf muse
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'], 'Linux'))
    name: build_documentation
    

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: "StarMuse/build/latex/muse.pdf"
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'], 'Linux'))
