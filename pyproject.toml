[build-system]
requires = ["setuptools>=61", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "Hawkes Research Group @ Chemical Engineering, Imperial College London", email = "a.hawkes@imperial.ac.uk"},
    {name = "Imperial College London RSE Team", email = "ict-rse-team@imperial.ac.uk"}
]
name = "MUSE_OS"
description = "Energy System Model"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">= 3.9, <3.14"
keywords = ["energy", "modelling"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
]
dependencies = [
    "numpy>=2.0",
    "scipy>=1.13",
    "pandas>=2.2",
    "xarray>=2024.6",
    "bottleneck>=1.4",
    "coloredlogs",
    "toml",
    "xlrd",
    "mypy-extensions",
    "pypubsub",
    "tomlkit"
]
dynamic = ["version"]

[project.optional-dependencies]
all = ["MUSE_OS[dev,doc,excel]"]
dev = [
    "pytest>4.0.2",
    "IPython",
    "jupyter",
    "nbconvert",
    "nbformat",
    "mypy",
    "pytest-xdist",
    "pyinstaller",
    "pre-commit"
]
doc = [
    "sphinx",
    "sphinx-rtd-theme",
    "ipykernel",
    "nbsphinx",
    "myst-parser",
    "sphinxcontrib-bibtex",
    "ipython",
    "pandoc",
    "seaborn"
]
excel = ["openpyxl"]
gui = ["gooey"]

[project.urls]
Homepage = "https://www.imperial.ac.uk/muse-energy/what-is-muse-/"

[project.scripts]
muse = "muse.__main__:run"
muse_gui = "muse_gui.__main__:run"

[tool.setuptools]
license-files = ["LICENSE"]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]
namespaces = true

[tool.setuptools_scm]

[tool.pytest.ini_options]
testpaths = ["tests", "src/muse"]
addopts = "--doctest-modules -rfE -n auto --dist=loadscope"
markers = [
    "sgidata: test that require legacy data",
    "legacy: test that require legacy modules",
    "regression: a regression test, including examples and tutorials",
    "notebook: a test which consist in running a jupyter notebook",
    "example: a test which consist in running an example",
    "tutorial: a test which consist in running a tutorial"
]

[tool.mypy]
ignore_missing_imports = true
strict_optional = true
files = ["src/**/*.py", "tests/**/*.py"]

[[tool.mypy.overrides]]
module = ["setup"]
ignore_errors = true

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = [
    "D",  # pydocstyle
    "E",  # pycodestyle
    "F",  # Pyflakes
    "I",  # isort
    "UP",  # Pyupgrade
    "RUF"  # Ruff's own checks
]
ignore = [
    "D1"  # missing docstring checks
]
pydocstyle.convention = "google"
